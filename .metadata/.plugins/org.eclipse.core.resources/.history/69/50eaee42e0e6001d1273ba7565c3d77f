package com.learning.travelmanagement.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.learning.travelmanagement.dao.BookingsDAO;
import com.learning.travelmanagement.dao.CabDAO;
import com.learning.travelmanagement.model.Bookings;
import com.learning.travelmanagement.model.Cab;
import com.learning.travelmanagement.service.AdminServices;

/*
 * when admin looks into all bookings -> /bookings . GET
 * when admin edits booking -> /booking/{boookingId} [data in request body]. PUT
 * when admin creates a bookings -> /bookings/{bookingId}. POST
 * when admin cancels booking -> booking/{bookingId}. DELETE
 * 
 * */
@RestController
@RequestMapping("/admin/")
public class AdminController {
	/*
	 * @Autowired private BookingsDAO bookingDao;
	 */
	
	@Autowired
	private AdminServices adminService;
	
	@Autowired BookingsDAO bookingDao;
	@Autowired CabDAO cabDao;
	
	/************ ADMIN BOOKINGS CONTROLLER ************/
	@GetMapping("/bookings")
	@ResponseBody
	public List<Bookings> getBookings() {
		List<Bookings> bookingList = bookingDao.findAll();
		System.out.println("****** \nThe booking list is : "+bookingList);
		
		return bookingList;
	}
	
	@GetMapping("/cab/{cabId}/bookings")
	@ResponseBody
	public List<Bookings> getBookingsbyCabId(@PathVariable int cabId) {
		List<Bookings> bookingList = adminService.getBookingsByCabId(cabId);
		System.out.println("****** \nThe booking list is : "+bookingList);
		
		return bookingList;
	}
	
	@GetMapping("/booking/{bookingId}")
	@ResponseBody
	public Optional<Bookings> getBookingsbyId(@PathVariable int bookingId) {
		Optional<Bookings> bookingList = bookingDao.findById(bookingId);
		System.out.println("****** \nThe booking list is : "+bookingList);
		
		return bookingList;
	}
	
	@PostMapping("/booking")
	@ResponseBody
	public Bookings newBooking(@RequestBody Bookings bData) {
		/*
		 * bData.setClient(new Client(clientId)); bData.setCab(new Cab(cabId));
		 */
		System.out.println("****** \nThe booking data is : "+bData);
		return bookingDao.save(bData);
	}
	
	@PutMapping("/booking/{bookingId}")
	@ResponseBody
	public Bookings updateBooking(@RequestBody Bookings bData, @PathVariable int bookingId) {
		bData.setId(bookingId);
		/*
		 * bData.setClient(new Client(clientId)); bData.setCab(new Cab(cabId));
		 */
		System.out.println("****** \nThe booking data is : "+bData);
		return bookingDao.save(bData);
	}
	
	@DeleteMapping("/booking/{bookingId}")
	@ResponseBody
	public void deleteBooking(@RequestBody Bookings bData) {
		System.out.println("****** \nThe booking data is : "+bData);
		bookingDao.delete(bData);
		/*
		 * System.out.println("****** \nThe booking list is : "+bookingList);
		 * 
		 * return bookingList;
		 */
	}
	
	/******** ADMIN CABS CONTROLLER***********/
	
	@GetMapping("/cabs")
	@ResponseBody
	public List<Cab> getCabs() {
		List<Cab> cabList = cabDao.findAll();
		System.out.println("****** \nThe Cab list is : "+cabList);
		
		return cabList;
	}
	
	@GetMapping("/cab/{id}")
	@ResponseBody
	public Optional<Cab> getCabsById(@PathVariable("id") int id) {
		Optional<Cab> cabList = cabDao.findById(id);
		System.out.println("****** \nThe Cab list is : "+cabList);
		return cabList;
	}
	
	@PostMapping("/cab")
	@ResponseBody
	public Cab newCab(@RequestBody Cab cData) {
		/*
		 * bData.setClient(new Client(clientId)); bData.setCab(new Cab(cabId));
		 */
		System.out.println("****** \nThe Cab data is : "+cData);
		return cabDao.save(cData);
	}
	
	@PutMapping("/cab/{cabId}")
	@ResponseBody
	public Cab updateCab(@RequestBody Cab cData, @PathVariable int cabId) {
		cData.setId(cabId);
		/*
		 * bData.setClient(new Client(clientId)); bData.setCab(new Cab(cabId));
		 */
		System.out.println("****** \nThe Cab data is : "+cData);
		return cabDao.save(cData);
	}
	
	@DeleteMapping("/cab/{cabId}")
	@ResponseBody
	public void deleteCab(@RequestBody Cab cData) {
		System.out.println("****** \nThe Cab data is : "+cData);
		cabDao.delete(cData);
		/*
		 * System.out.println("****** \nThe booking list is : "+bookingList);
		 * 
		 * return bookingList;
		 */
	}
	
}
